steps:
    - bash: |
          printenv
      displayName: "Show all env vars"
      condition: eq(variables['system.debug'], 'true')

    - task: NodeTool@0
      displayName: "Use Node $(NodeVersion)"
      inputs:
          versionSpec: $(NodeVersion)

    - task: Npm@1
      displayName: "Use NPM $(NpmVersion)"
      inputs:
          command: custom
          verbose: true
          customCommand: "install -g npm@$(NpmVersion)"

    - task: Npm@1
      displayName: "npm ci"
      inputs:
          command: custom
          verbose: true
          customCommand: ci

    - bash: |
          echo AVAILABLE DEPENDENCY VERSIONS
          echo Node Version = `node -v`
          echo NPM Version = `npm -v`
          echo Python Version = `python --version`
          echo Gulp Version = `gulp --version`
      condition: and(succeeded(), eq(variables['system.debug'], 'true'))
      displayName: Show Dependency Versions

    - task: DownloadBuildArtifacts@0
      inputs:
          buildType: "current"
          artifactName: "VSIX"
          downloadPath: "$(Build.SourcesDirectory)"
      displayName: "Restore VSIX"

    - task: CopyFiles@2
      inputs:
          sourceFolder: "$(Build.SourcesDirectory)/VSIX"
          targetFolder: $(Build.SourcesDirectory)
      displayName: "Copy VSIX"
      condition: succeeded()

    - task: CopyFiles@2
      inputs:
          contents: "*.vsix"
          targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: "Copy to Release"
      condition: succeeded()

    - task: PublishBuildArtifacts@1
      inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: Release
      displayName: "Publish Release to Arifacts"
      condition: succeeded()

    # - task: Gulp@0
    #   displayName: "Upload Master VSIX to Blobstore"
    #   env:
    #       AZURE_STORAGE_ACCOUNT: $(AZURE_STORAGE_ACCOUNT)
    #       AZURE_STORAGE_ACCESS_KEY: $(AZURE_STORAGE_ACCESS_KEY)
    #       AZURE_STORAGE_CONTAINER: $(AZURE_STORAGE_CONTAINER)
    #   inputs:
    #       targets: "uploadDeveloperExtension"
    #   condition: succeeded()
    # #   condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

    # - task: Gulp@0
    #   displayName: "Upload Release VSIX to Blobstore"
    #   env:
    #       AZURE_STORAGE_ACCOUNT: $(AZURE_STORAGE_ACCOUNT)
    #       AZURE_STORAGE_ACCESS_KEY: $(AZURE_STORAGE_ACCESS_KEY)
    #       AZURE_STORAGE_CONTAINER: $(AZURE_STORAGE_CONTAINER)
    #   inputs:
    #       targets: "uploadReleaseExtension"
    #   condition: succeeded()
    # #   condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'release'))
